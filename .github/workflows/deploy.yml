name: Testing process

on:
  push:
    branches: [ "main" ]

jobs:
  composer:
    runs-on: ubuntu-latest
    container:
      image: docker://reinanhs/php-dev-8.2-swoole:latest
    steps:
      - uses: actions/checkout@v3
      - name: "Validate composer.json and composer.lock"
        run: "composer validate --strict"
      - name: "Determine composer cache directory"
        id: "determine-composer-cache-directory"
        run: "echo \"::set-output name=directory::$(composer config cache-dir)\""
      - name: Install
        run: composer install
      - name: "Cache dependencies installed with composer"
        uses: actions/cache@v3
        id: cache-vendor
        with:
          path: "${{ steps.determine-composer-cache-directory.outputs.directory }}"
          key: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-${{ hashFiles('composer.lock') }}"
          restore-keys: "php-${{ matrix.php-version }}-composer-${{ matrix.dependencies }}-"
  co-phpunit:
    runs-on: ubuntu-latest
    needs:
      - composer
    container:
      image: docker://reinanhs/php-dev-8.2-swoole:latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached vendor
        id: cache-vendor-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor
      - name: Test
        run: vendor/bin/co-phpunit --prepend test/bootstrap.php -c phpunit.xml
  coverage:
    runs-on: ubuntu-latest
    needs:
      - composer
      - co-phpunit
    container:
      image: docker://reinanhs/php-dev-8.2-swoole:latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached vendor
        id: cache-vendor-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor
      - name: Test
        run: XDEBUG_MODE=coverage vendor/bin/co-phpunit --prepend test/bootstrap.php -c phpunit.xml --coverage-html cover/ --testsuite=u
      - name: Archive coverage
        uses: actions/upload-artifact@v3
        with:
          name: cover-page
          path: cover/
          retention-days: 1
  php-cs-fixer:
    runs-on: ubuntu-latest
    needs:
      - composer
    container:
      image: docker://reinanhs/php-dev-8.2-swoole:latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached vendor
        id: cache-vendor-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor
      - name: Style Check
        run: php vendor/bin/php-cs-fixer check --diff
  psalm:
    runs-on: ubuntu-latest
    needs:
      - composer
    container:
      image: docker://reinanhs/php-dev-8.2-swoole:latest
    steps:
      - uses: actions/checkout@v3
      - name: Restore cached vendor
        id: cache-vendor-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor
          key: ${{ runner.os }}-vendor
      - name: Static Check
        run: php vendor/bin/psalm --output-format=console --show-info=true
  push_to_registry:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs:
      - co-phpunit
      - php-cs-fixer
      - psalm
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: reinanhs/hyperf-example-app

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}